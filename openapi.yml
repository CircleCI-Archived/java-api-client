openapi: 3.0.0
info:
  version: v2
  title: CircleCI API
  license:
    name: MIT
servers:
- url: https://circleci.com/api/v2
security:
- api_key_query: []
- api_key_header: []
- basic_auth: []
paths:
  /me:
    get:
      summary: Get the currently signed in user.
      description: Provides information about the user that is currently signed in.
      operationId: getCurrentUser
      responses:
        200:
          description: User login information.
          content:
            application/json:
              schema:
                type: object
                properties:
                  login:
                    type: string
                    description: The login information for the user on the VCS.
                    title: Login
                  name:
                    type: string
                    description: The name of the user.
                required:
                - login
                - name
                title: User
  /pipeline/{pipeline-id}:
    get:
      summary: Get a pipeline.
      description: Returns a pipeline by ID.
      operationId: getPipelineById
      responses:
        200:
          description: A pipeline object.
          links:
            ProjectFromPipeline:
              operationId: getProjectBySlug
              parameters:
                project_slug: $response.body#/project_slug
          content:
            application/json:
              schema:
                type: object
                properties:
                  workflows:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                          description: The unique ID of the workflow.
                      required:
                      - id
                      description: Basic information about a workflow
                    description: The workflows this pipeline has triggered.
                  id:
                    type: string
                    format: uuid
                    description: The unique ID of the pipeline.
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          enum:
                          - config
                          - plan
                          type: string
                          description: The type of error.
                        message:
                          type: string
                          description: A human-readable error message.
                      required:
                      - type
                      - message
                      description: An error with a type and message.
                    description: A sequence of errors that have occurred within the pipeline.
                  project_slug:
                    type: string
                    description: The project-slug for the pipeline.
                    example: gh/CircleCI-Public/api-preview-docs
                  updated_at:
                    type: string
                    format: date-time
                    description: The date and time the pipeline was last updated.
                  number:
                    type: integer
                    format: int64
                    description: The number of the pipeline.
                  state:
                    enum:
                    - created
                    - running
                    - failed
                    - errored
                    - successful
                    - on_hold
                    - blocked
                    - pending
                    - canceled
                    type: string
                    description: The current state of the pipeline.
                  created_at:
                    type: string
                    format: date-time
                    description: The date and time the pipeline was created.
                  trigger:
                    type: object
                    properties:
                      type:
                        enum:
                        - explicit
                        - api
                        - webhook
                        type: string
                        description: The type of trigger.
                      received_at:
                        type: string
                        format: date-time
                        description: The date and time the trigger was received.
                      actor:
                        type: object
                        properties:
                          login:
                            type: string
                            description: The login information for the user on the VCS.
                            title: Login
                          avatar_url:
                            type: string
                            x-nullable: true
                            description: URL to the user's avatar on the VCS
                        required:
                        - login
                        - avatar_url
                        description: The user who triggered the Pipeline
                    required:
                    - type
                    - received_at
                    - actor
                    description: A summary of the trigger.
                  vcs:
                    type: object
                    properties:
                      provider_name:
                        type: string
                        description: Name of the VCS provider (e.g. GitHub, Bitbucket).
                        example: GitHub
                      origin_repository_url:
                        type: string
                        description: URL for the repository where the trigger originated. For fork-PR pipelines, this is the URL to the fork. For other pipelines the `origin_` and `target_repository_url`s will be the same.
                        example: https://github.com/CircleCI-Public/api-preview-docs
                      target_repository_url:
                        type: string
                        description: URL for the repository the trigger targets (i.e. the repository where the PR will be merged). For fork-PR pipelines, this is the URL to the parent repo. For other pipelines, the `origin_` and `target_repository_url`s will be the same.
                        example: https://github.com/CircleCI-Public/api-preview-docs
                      revision:
                        type: string
                        description: The code revision the pipeline ran.
                        example: f454a02b5d10fcccfd7d9dd7608a76d6493a98b4
                      branch:
                        type: string
                        description: The branch where the pipeline ran. The HEAD commit on this branch was used for the pipeline. Note that `branch` and `tag` are mutually exclusive.
                        example: feature/design-new-api
                      tag:
                        type: string
                        description: The tag used by the pipeline. The commit that this tag points to was used for the pipeline. Note that `branch` and `tag` are mutually exclusive.
                        example: v3.1.4159
                    required:
                    - provider_name
                    - origin_repository_url
                    - target_repository_url
                    - revision
                    description: VCS information for the pipeline.
                required:
                - created_at
                - errors
                - id
                - number
                - project_slug
                - state
                - trigger
                - workflows
                description: 'NOTE: The definition of pipeline is subject to change.'
                title: PipelineWithWorkflows
      parameters:
      - in: path
        name: pipeline-id
        description: The unique ID of the pipeline.
        schema:
          type: string
          format: uuid
        required: true
  /pipeline/{pipeline-id}/config:
    get:
      summary: Get a pipeline's configuration.
      description: Returns a pipeline's configuration by ID.
      operationId: getPipelineConfigById
      responses:
        200:
          description: The configuration strings for the pipeline.
          content:
            application/json:
              schema:
                type: object
                properties:
                  source:
                    type: string
                    description: The source configuration for the pipeline, before any config compilation has been performed. If there is no config, then this field will be empty.
                  compiled:
                    type: string
                    description: The compiled configuration for the pipeline, after all orb expansion has been performed. If there were errors processing the pipeline's configuration, then this field may be empty.
                required:
                - source
                - compiled
                description: The configuration strings for the pipeline.
                title: PipelineConfig
      parameters:
      - in: path
        name: pipeline-id
        description: The unique ID of the pipeline.
        schema:
          type: string
          format: uuid
        required: true
  /project/{project-slug}:
    get:
      summary: Get a project.
      description: Retrieves a project by project slug.
      operationId: getProjectBySlug
      responses:
        200:
          description: A project object
          content:
            application/json:
              schema:
                type: object
                properties:
                  slug:
                    type: string
                    description: Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped.
                    example: gh/CircleCI-Public/api-preview-docs
                  name:
                    type: string
                    description: The name of the project
                    example: api-preview-docs
                  organization_name:
                    type: string
                    description: The name of the organization the project belongs to
                    example: CircleCI-Public
                  vcs_info:
                    type: object
                    properties:
                      vcs_url:
                        type: string
                        description: URL to the repository hosting the project's code
                        example: https://github.com/CircleCI-Public/api-preview-docs
                      provider:
                        enum:
                        - Bitbucket
                        - GitHub
                        type: string
                        description: The VCS provider
                      default_branch:
                        type: string
                        example: master
                    required:
                    - vcs_url
                    - provider
                    - default_branch
                    description: Information about the VCS that hosts the project source code.
                required:
                - slug
                - name
                - organization_name
                - vcs_info
                description: 'NOTE: The definition of Project is subject to change.'
                title: Project
      parameters:
      - in: path
        name: project-slug
        description: Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped.
        schema:
          type: string
        required: true
        example: gh/CircleCI-Public/api-preview-docs
        allowReserved: true
  /project/{project-slug}/checkout-key:
    get:
      summary: Get all checkout keys.
      description: Returns a sequence of checkout keys for `:project`.
      operationId: listCheckoutKeys
      responses:
        200:
          description: A sequence of checkout keys.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    public-key:
                      type: string
                      description: A public SSH key.
                      example: ssh-rsa ...
                    type:
                      enum:
                      - deploy-key
                      - github-user-key
                      type: string
                      description: The type of checkout key. This may be either `deploy-key` or `github-user-key`.
                      title: CheckoutKeyType
                      example: deploy-key
                    fingerprint:
                      type: string
                      description: An SSH key fingerprint.
                      example: c9:0b:1c:4f:d5:65:56:b9:ad:88:f9:81:2b:37:74:2f
                    preferred:
                      type: boolean
                      description: A boolean value that indicates if this key is preferred.
                      example: true
                    time:
                      type: string
                      format: date-time
                      description: The date and time the checkout key was created.
                      example: '2015-09-21T17:29:21.042Z'
                  required:
                  - public-key
                  - type
                  - fingerprint
                  - preferred
                  - time
                  title: CheckoutKey
      parameters:
      - in: path
        name: project-slug
        description: Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped.
        schema:
          type: string
        required: true
        example: gh/CircleCI-Public/api-preview-docs
        allowReserved: true
    post:
      summary: Create a new checkout key.
      description: Creates a new checkout key. This API request is only usable with a user API token.
      operationId: createCheckoutKey
      responses:
        202:
          description: The checkout key.
          content:
            application/json:
              schema:
                type: object
                properties:
                  public-key:
                    type: string
                    description: A public SSH key.
                    example: ssh-rsa ...
                  type:
                    enum:
                    - deploy-key
                    - github-user-key
                    type: string
                    description: The type of checkout key. This may be either `deploy-key` or `github-user-key`.
                    title: CheckoutKeyType
                    example: deploy-key
                  fingerprint:
                    type: string
                    description: An SSH key fingerprint.
                    example: c9:0b:1c:4f:d5:65:56:b9:ad:88:f9:81:2b:37:74:2f
                  preferred:
                    type: boolean
                    description: A boolean value that indicates if this key is preferred.
                    example: true
                  time:
                    type: string
                    format: date-time
                    description: The date and time the checkout key was created.
                    example: '2015-09-21T17:29:21.042Z'
                required:
                - public-key
                - type
                - fingerprint
                - preferred
                - time
                title: CheckoutKey
      parameters:
      - in: path
        name: project-slug
        description: Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped.
        schema:
          type: string
        required: true
        example: gh/CircleCI-Public/api-preview-docs
        allowReserved: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  enum:
                  - user-key
                  - deploy-key
                  type: string
                  description: The type of checkout key to create. This may be either `deploy-key` or `user-key`.
                  title: CheckoutKeyInputType
                  example: deploy-key
              required:
              - type
              title: CheckoutKeyInput
  /project/{project-slug}/checkout-key/{fingerprint}:
    delete:
      summary: Delete a checkout key.
      description: Deletes the checkout key.
      operationId: deleteCheckoutKey
      responses:
        200:
          description: A confirmation message.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: A human-readable message
                required:
                - message
                description: message response
                title: MessageResponse
      parameters:
      - in: path
        name: project-slug
        description: Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped.
        schema:
          type: string
        required: true
        example: gh/CircleCI-Public/api-preview-docs
        allowReserved: true
      - in: path
        name: fingerprint
        description: An SSH key fingerprint.
        schema:
          type: string
        required: true
        example: c9:0b:1c:4f:d5:65:56:b9:ad:88:f9:81:2b:37:74:2f
    get:
      summary: Get a checkout key.
      description: Returns an individual checkout key.
      operationId: getCheckoutKey
      responses:
        200:
          description: The checkout key.
          content:
            application/json:
              schema:
                type: object
                properties:
                  public-key:
                    type: string
                    description: A public SSH key.
                    example: ssh-rsa ...
                  type:
                    enum:
                    - deploy-key
                    - github-user-key
                    type: string
                    description: The type of checkout key. This may be either `deploy-key` or `github-user-key`.
                    title: CheckoutKeyType
                    example: deploy-key
                  fingerprint:
                    type: string
                    description: An SSH key fingerprint.
                    example: c9:0b:1c:4f:d5:65:56:b9:ad:88:f9:81:2b:37:74:2f
                  preferred:
                    type: boolean
                    description: A boolean value that indicates if this key is preferred.
                    example: true
                  time:
                    type: string
                    format: date-time
                    description: The date and time the checkout key was created.
                    example: '2015-09-21T17:29:21.042Z'
                required:
                - public-key
                - type
                - fingerprint
                - preferred
                - time
                title: CheckoutKey
      parameters:
      - in: path
        name: project-slug
        description: Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped.
        schema:
          type: string
        required: true
        example: gh/CircleCI-Public/api-preview-docs
        allowReserved: true
      - in: path
        name: fingerprint
        description: An SSH key fingerprint.
        schema:
          type: string
        required: true
        example: c9:0b:1c:4f:d5:65:56:b9:ad:88:f9:81:2b:37:74:2f
  /project/{project-slug}/envvar:
    get:
      summary: Get an environment variable.
      description: Returns four 'x' characters, in addition to the last four ASCII characters of the value, consistent with the display of environment variable values on the CircleCI website.
      operationId: listEnvVars
      responses:
        200:
          description: A sequence of environment variables.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                      description: The name of the environment variable.
                      example: foo
                    value:
                      type: string
                      description: The value of the environment variable.
                      example: xxxx1234
                  required:
                  - name
                  - value
                  title: EnvironmentVariablePair
      parameters:
      - in: path
        name: project-slug
        description: Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped.
        schema:
          type: string
        required: true
        example: gh/CircleCI-Public/api-preview-docs
        allowReserved: true
    post:
      summary: Create an environment variable.
      description: Creates a new environment variable.
      operationId: createEnvVar
      responses:
        201:
          description: The environment variable.
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    description: The name of the environment variable.
                    example: foo
                  value:
                    type: string
                    description: The value of the environment variable.
                    example: xxxx1234
                required:
                - name
                - value
                title: EnvironmentVariablePair
      parameters:
      - in: path
        name: project-slug
        description: Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped.
        schema:
          type: string
        required: true
        example: gh/CircleCI-Public/api-preview-docs
        allowReserved: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the environment variable.
                  example: foo
                value:
                  type: string
                  description: The value of the environment variable.
                  example: xxxx1234
              required:
              - name
              - value
              title: EnvironmentVariablePair
  /project/{project-slug}/envvar/{name}:
    delete:
      summary: Delete an environment variable.
      description: Deletes the environment variable named :name.
      operationId: deleteEnvVar
      responses:
        200:
          description: A confirmation message.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: A human-readable message
                required:
                - message
                description: message response
                title: MessageResponse
      parameters:
      - in: path
        name: project-slug
        description: Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped.
        schema:
          type: string
        required: true
        example: gh/CircleCI-Public/api-preview-docs
        allowReserved: true
      - in: path
        name: name
        description: The name of the environment variable.
        schema:
          type: string
        required: true
        example: foo
    get:
      summary: Get masked environment variables.
      description: Returns the masked value of environment variable :name.
      operationId: getEnvVar
      responses:
        200:
          description: The environment variable.
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    description: The name of the environment variable.
                    example: foo
                  value:
                    type: string
                    description: The value of the environment variable.
                    example: xxxx1234
                required:
                - name
                - value
                title: EnvironmentVariablePair
      parameters:
      - in: path
        name: project-slug
        description: Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped.
        schema:
          type: string
        required: true
        example: gh/CircleCI-Public/api-preview-docs
        allowReserved: true
      - in: path
        name: name
        description: The name of the environment variable.
        schema:
          type: string
        required: true
        example: foo
  /project/{project-slug}/pipeline:
    post:
      summary: Trigger a new pipeline.
      description: Triggers a new pipeline on the project.
      operationId: triggerPipeline
      responses:
        202:
          description: The created pipeline.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                    description: The unique ID of the pipeline.
                  state:
                    enum:
                    - created
                    - running
                    - failed
                    - errored
                    - successful
                    - on_hold
                    - blocked
                    - pending
                    - canceled
                    type: string
                    description: The current state of the pipeline.
                  number:
                    type: integer
                    format: int64
                    description: The number of the pipeline.
                  created_at:
                    type: string
                    format: date-time
                    description: The date and time the pipeline was created.
                required:
                - id
                - state
                - number
                - created_at
                description: 'NOTE: The definition of pipeline is subject to change.'
                title: PipelineLight
      parameters:
      - in: path
        name: project-slug
        description: Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped.
        schema:
          type: string
        required: true
        example: gh/CircleCI-Public/api-preview-docs
        allowReserved: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                branch:
                  type: string
                  description: The branch where the pipeline ran. The HEAD commit on this branch was used for the pipeline. Note that `branch` and `tag` are mutually exclusive.
                  example: feature/design-new-api
                tag:
                  type: string
                  description: The tag used by the pipeline. The commit that this tag points to was used for the pipeline. Note that `branch` and `tag` are mutually exclusive.
                  example: v3.1.4159
                parameters:
                  type: object
                  description: An object containing pipeline parameters and their values.
                  example: '{"deploy_prod": true}'
              x-nullable: true
              description: The information you can supply when triggering a pipeline.
              title: TriggerPipelineParameters
    get:
      summary: Get all pipelines.
      description: Returns all pipelines for this project.
      operationId: listPipelinesForProject
      responses:
        202:
          description: A sequence of pipelines.
          links:
            NextPipelinePage:
              operationId: listPipelinesForProject
              parameters:
                project-slug: $request.path.project-slug
                page-token: $response.body#/next_page_token
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                          description: The unique ID of the pipeline.
                        errors:
                          type: array
                          items:
                            type: object
                            properties:
                              type:
                                enum:
                                - config
                                - plan
                                type: string
                                description: The type of error.
                              message:
                                type: string
                                description: A human-readable error message.
                            required:
                            - type
                            - message
                            description: An error with a type and message.
                          description: A sequence of errors that have occurred within the pipeline.
                        project_slug:
                          type: string
                          description: The project-slug for the pipeline.
                          example: gh/CircleCI-Public/api-preview-docs
                        updated_at:
                          type: string
                          format: date-time
                          description: The date and time the pipeline was last updated.
                        number:
                          type: integer
                          format: int64
                          description: The number of the pipeline.
                        state:
                          enum:
                          - created
                          - running
                          - failed
                          - errored
                          - successful
                          - on_hold
                          - blocked
                          - pending
                          - canceled
                          type: string
                          description: The current state of the pipeline.
                        created_at:
                          type: string
                          format: date-time
                          description: The date and time the pipeline was created.
                        trigger:
                          type: object
                          properties:
                            type:
                              enum:
                              - explicit
                              - api
                              - webhook
                              type: string
                              description: The type of trigger.
                            received_at:
                              type: string
                              format: date-time
                              description: The date and time the trigger was received.
                            actor:
                              type: object
                              properties:
                                login:
                                  type: string
                                  description: The login information for the user on the VCS.
                                  title: Login
                                avatar_url:
                                  type: string
                                  x-nullable: true
                                  description: URL to the user's avatar on the VCS
                              required:
                              - login
                              - avatar_url
                              description: The user who triggered the Pipeline
                          required:
                          - type
                          - received_at
                          - actor
                          description: A summary of the trigger.
                        vcs:
                          type: object
                          properties:
                            provider_name:
                              type: string
                              description: Name of the VCS provider (e.g. GitHub, Bitbucket).
                              example: GitHub
                            origin_repository_url:
                              type: string
                              description: URL for the repository where the trigger originated. For fork-PR pipelines, this is the URL to the fork. For other pipelines the `origin_` and `target_repository_url`s will be the same.
                              example: https://github.com/CircleCI-Public/api-preview-docs
                            target_repository_url:
                              type: string
                              description: URL for the repository the trigger targets (i.e. the repository where the PR will be merged). For fork-PR pipelines, this is the URL to the parent repo. For other pipelines, the `origin_` and `target_repository_url`s will be the same.
                              example: https://github.com/CircleCI-Public/api-preview-docs
                            revision:
                              type: string
                              description: The code revision the pipeline ran.
                              example: f454a02b5d10fcccfd7d9dd7608a76d6493a98b4
                            branch:
                              type: string
                              description: The branch where the pipeline ran. The HEAD commit on this branch was used for the pipeline. Note that `branch` and `tag` are mutually exclusive.
                              example: feature/design-new-api
                            tag:
                              type: string
                              description: The tag used by the pipeline. The commit that this tag points to was used for the pipeline. Note that `branch` and `tag` are mutually exclusive.
                              example: v3.1.4159
                          required:
                          - provider_name
                          - origin_repository_url
                          - target_repository_url
                          - revision
                          description: VCS information for the pipeline.
                      required:
                      - id
                      - number
                      - project_slug
                      - created_at
                      - errors
                      - state
                      - trigger
                      description: 'NOTE: The definition of pipeline is subject to change.'
                      title: Pipeline
                  next_page_token:
                    type: string
                    x-nullable: true
                    description: A token to pass as a `page-token` query parameter to return the next page of results.
                required:
                - items
                - next_page_token
                description: List of pipelines
                title: PipelineListResponse
      parameters:
      - in: path
        name: project-slug
        description: Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped.
        schema:
          type: string
        required: true
        example: gh/CircleCI-Public/api-preview-docs
        allowReserved: true
      - in: query
        name: page-token
        description: A token to retrieve the next page of results.
        schema:
          type: string
        required: false
        allowEmptyValue: true
  /project/{project-slug}/pipeline/mine:
    get:
      summary: Get your pipelines.
      description: Returns a sequence of all pipelines for this project triggered by the user.
      operationId: listMyPipelines
      responses:
        200:
          description: A sequence of pipelines.
          links:
            NextPipelinePage:
              operationId: listMyPipelines
              parameters:
                project-slug: $request.path.project-slug
                page-token: $response.body#/next_page_token
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                          description: The unique ID of the pipeline.
                        errors:
                          type: array
                          items:
                            type: object
                            properties:
                              type:
                                enum:
                                - config
                                - plan
                                type: string
                                description: The type of error.
                              message:
                                type: string
                                description: A human-readable error message.
                            required:
                            - type
                            - message
                            description: An error with a type and message.
                          description: A sequence of errors that have occurred within the pipeline.
                        project_slug:
                          type: string
                          description: The project-slug for the pipeline.
                          example: gh/CircleCI-Public/api-preview-docs
                        updated_at:
                          type: string
                          format: date-time
                          description: The date and time the pipeline was last updated.
                        number:
                          type: integer
                          format: int64
                          description: The number of the pipeline.
                        state:
                          enum:
                          - created
                          - running
                          - failed
                          - errored
                          - successful
                          - on_hold
                          - blocked
                          - pending
                          - canceled
                          type: string
                          description: The current state of the pipeline.
                        created_at:
                          type: string
                          format: date-time
                          description: The date and time the pipeline was created.
                        trigger:
                          type: object
                          properties:
                            type:
                              enum:
                              - explicit
                              - api
                              - webhook
                              type: string
                              description: The type of trigger.
                            received_at:
                              type: string
                              format: date-time
                              description: The date and time the trigger was received.
                            actor:
                              type: object
                              properties:
                                login:
                                  type: string
                                  description: The login information for the user on the VCS.
                                  title: Login
                                avatar_url:
                                  type: string
                                  x-nullable: true
                                  description: URL to the user's avatar on the VCS
                              required:
                              - login
                              - avatar_url
                              description: The user who triggered the Pipeline
                          required:
                          - type
                          - received_at
                          - actor
                          description: A summary of the trigger.
                        vcs:
                          type: object
                          properties:
                            provider_name:
                              type: string
                              description: Name of the VCS provider (e.g. GitHub, Bitbucket).
                              example: GitHub
                            origin_repository_url:
                              type: string
                              description: URL for the repository where the trigger originated. For fork-PR pipelines, this is the URL to the fork. For other pipelines the `origin_` and `target_repository_url`s will be the same.
                              example: https://github.com/CircleCI-Public/api-preview-docs
                            target_repository_url:
                              type: string
                              description: URL for the repository the trigger targets (i.e. the repository where the PR will be merged). For fork-PR pipelines, this is the URL to the parent repo. For other pipelines, the `origin_` and `target_repository_url`s will be the same.
                              example: https://github.com/CircleCI-Public/api-preview-docs
                            revision:
                              type: string
                              description: The code revision the pipeline ran.
                              example: f454a02b5d10fcccfd7d9dd7608a76d6493a98b4
                            branch:
                              type: string
                              description: The branch where the pipeline ran. The HEAD commit on this branch was used for the pipeline. Note that `branch` and `tag` are mutually exclusive.
                              example: feature/design-new-api
                            tag:
                              type: string
                              description: The tag used by the pipeline. The commit that this tag points to was used for the pipeline. Note that `branch` and `tag` are mutually exclusive.
                              example: v3.1.4159
                          required:
                          - provider_name
                          - origin_repository_url
                          - target_repository_url
                          - revision
                          description: VCS information for the pipeline.
                      required:
                      - id
                      - number
                      - project_slug
                      - created_at
                      - errors
                      - state
                      - trigger
                      description: 'NOTE: The definition of pipeline is subject to change.'
                      title: Pipeline
                  next_page_token:
                    type: string
                    x-nullable: true
                    description: A token to pass as a `page-token` query parameter to return the next page of results.
                required:
                - items
                - next_page_token
                description: List of pipelines
                title: PipelineListResponse
      parameters:
      - in: path
        name: project-slug
        description: Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped.
        schema:
          type: string
        required: true
        example: gh/CircleCI-Public/api-preview-docs
        allowReserved: true
      - in: query
        name: page-token
        description: A token to retrieve the next page of results.
        schema:
          type: string
        required: false
        allowEmptyValue: true
  /workflow/{id}:
    get:
      summary: Get a workflow.
      description: Returns summary fields of a workflow by ID.
      operationId: getWorkflowById
      responses:
        200:
          description: A workflow object.
          links:
            ProjectFromGetWorkflow:
              operationId: getProjectBySlug
              parameters:
                project_slug: $response.body#/project_slug
            WorkflowJobs:
              operationId: listWorkflowJobs
              parameters:
                id: $response.body#/id
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                    description: The unique ID of the workflow.
                  name:
                    type: string
                    description: The name of the workflow.
                    example: build-and-test
                  status:
                    enum:
                    - success
                    - running
                    - not_run
                    - failed
                    - error
                    - failing
                    - on_hold
                    - canceled
                    - unauthorized
                    type: string
                    description: The current status of the workflow.
                  created_at:
                    type: string
                    format: date-time
                    description: The date and time the workflow was created.
                  stopped_at:
                    type: string
                    format: date-time
                    x-nullable: true
                    description: The date and time the workflow stopped.
                  pipeline_id:
                    type: string
                    format: uuid
                    description: The ID of the pipeline this workflow belongs to.
                  pipeline_number:
                    type: integer
                    format: int64
                    description: The number of the pipeline this workflow belongs to.
                  project_slug:
                    type: string
                    description: The project-slug for the pipeline this workflow belongs to.
                    example: gh/CircleCI-Public/api-preview-docs
                required:
                - id
                - name
                - status
                - created_at
                - stopped_at
                - pipeline_id
                - pipeline_number
                - project_slug
                description: A workflow
                title: Workflow
      parameters:
      - in: path
        name: id
        description: The unique ID of the workflow.
        schema:
          type: string
          format: uuid
        required: true
  /workflow/{id}/jobs:
    get:
      summary: Get a workflow's jobs.
      description: Returns a sequence of jobs for a workflow.
      operationId: listWorkflowJobs
      responses:
        200:
          description: A paginated sequence of jobs.
          links:
            NextWorkflowJobPage:
              operationId: listWorkflowJobs
              parameters:
                id: $request.path.id
                page-token: $response.body#/next_page_token
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        dependencies:
                          type: array
                          items:
                            type: string
                            format: uuid
                            description: The unique ID of the job.
                          description: A sequence of the unique job IDs for the jobs that this job depends upon in the workflow.
                        job_number:
                          type: integer
                          format: int64
                          description: The number of the job.
                        id:
                          type: string
                          format: uuid
                          description: The unique ID of the job.
                        name:
                          type: string
                          description: The name of the job.
                        project_slug:
                          type: string
                          description: The project-slug for the job.
                          example: gh/CircleCI-Public/api-preview-docs
                        status:
                          description: The current status of the job.
                        stop_time:
                          type: string
                          format: date-time
                          description: The time when the job stopped.
                        type:
                          enum:
                          - build
                          - approval
                          type: string
                          description: The type of job.
                        start_time:
                          type: string
                          format: date-time
                          description: The date and time the job started.
                      required:
                      - id
                      - name
                      - job_number
                      - start_time
                      - dependencies
                      - project_slug
                      - status
                      - type
                      description: Job
                      title: Job
                  next_page_token:
                    type: string
                    x-nullable: true
                    description: A token to pass as a `page-token` query parameter to return the next page of results.
                required:
                - items
                - next_page_token
                title: WorkflowJobListResponse
      parameters:
      - in: path
        name: id
        description: The unique ID of the workflow.
        schema:
          type: string
          format: uuid
        required: true
components:
  securitySchemes:
    api_key_query:
      type: apiKey
      name: circle-token
      in: query
    api_key_header:
      type: apiKey
      name: Circle-Token
      in: header
    basic_auth:
      description: HTTP basic authentication. The username should be set as the circle-token value, and the password should be left blank.
      type: http
      scheme: basic
