/*
 * CircleCI API
 * This describes the resources that make up the CircleCI API v2.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.circleci.client.v2.model;

import java.util.Objects;
import java.util.Arrays;
import com.circleci.client.v2.model.InlineResponse2006TestCounts;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * InlineResponse2006TestRuns
 */

public class InlineResponse2006TestRuns {
  public static final String JSON_PROPERTY_PIPELINE_NUMBER = "pipeline_number";
  @JsonProperty(JSON_PROPERTY_PIPELINE_NUMBER)
  private Long pipelineNumber;

  public static final String JSON_PROPERTY_WORKFLOW_ID = "workflow_id";
  @JsonProperty(JSON_PROPERTY_WORKFLOW_ID)
  private Object workflowId = null;

  public static final String JSON_PROPERTY_SUCCESS_RATE = "success_rate";
  @JsonProperty(JSON_PROPERTY_SUCCESS_RATE)
  private Float successRate;

  public static final String JSON_PROPERTY_TEST_COUNTS = "test_counts";
  @JsonProperty(JSON_PROPERTY_TEST_COUNTS)
  private InlineResponse2006TestCounts testCounts = null;

  public InlineResponse2006TestRuns pipelineNumber(Long pipelineNumber) {
    this.pipelineNumber = pipelineNumber;
    return this;
  }

   /**
   * The number of the pipeline associated with the provided test counts
   * minimum: 0
   * @return pipelineNumber
  **/
  @ApiModelProperty(required = true, value = "The number of the pipeline associated with the provided test counts")
  public Long getPipelineNumber() {
    return pipelineNumber;
  }

  public void setPipelineNumber(Long pipelineNumber) {
    this.pipelineNumber = pipelineNumber;
  }

  public InlineResponse2006TestRuns workflowId(Object workflowId) {
    this.workflowId = workflowId;
    return this;
  }

   /**
   * The ID of the workflow associated with the provided test counts
   * @return workflowId
  **/
  @ApiModelProperty(required = true, value = "The ID of the workflow associated with the provided test counts")
  public Object getWorkflowId() {
    return workflowId;
  }

  public void setWorkflowId(Object workflowId) {
    this.workflowId = workflowId;
  }

  public InlineResponse2006TestRuns successRate(Float successRate) {
    this.successRate = successRate;
    return this;
  }

   /**
   * The success rate calculated from test counts
   * @return successRate
  **/
  @ApiModelProperty(required = true, value = "The success rate calculated from test counts")
  public Float getSuccessRate() {
    return successRate;
  }

  public void setSuccessRate(Float successRate) {
    this.successRate = successRate;
  }

  public InlineResponse2006TestRuns testCounts(InlineResponse2006TestCounts testCounts) {
    this.testCounts = testCounts;
    return this;
  }

   /**
   * Get testCounts
   * @return testCounts
  **/
  @ApiModelProperty(required = true, value = "")
  public InlineResponse2006TestCounts getTestCounts() {
    return testCounts;
  }

  public void setTestCounts(InlineResponse2006TestCounts testCounts) {
    this.testCounts = testCounts;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse2006TestRuns inlineResponse2006TestRuns = (InlineResponse2006TestRuns) o;
    return Objects.equals(this.pipelineNumber, inlineResponse2006TestRuns.pipelineNumber) &&
        Objects.equals(this.workflowId, inlineResponse2006TestRuns.workflowId) &&
        Objects.equals(this.successRate, inlineResponse2006TestRuns.successRate) &&
        Objects.equals(this.testCounts, inlineResponse2006TestRuns.testCounts);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pipelineNumber, workflowId, successRate, testCounts);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse2006TestRuns {\n");
    sb.append("    pipelineNumber: ").append(toIndentedString(pipelineNumber)).append("\n");
    sb.append("    workflowId: ").append(toIndentedString(workflowId)).append("\n");
    sb.append("    successRate: ").append(toIndentedString(successRate)).append("\n");
    sb.append("    testCounts: ").append(toIndentedString(testCounts)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

