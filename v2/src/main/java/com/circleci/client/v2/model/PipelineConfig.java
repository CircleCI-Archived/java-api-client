/*
 * CircleCI API
 * This describes the resources that make up the CircleCI API v2.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.circleci.client.v2.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * The configuration strings for the pipeline.
 */
@ApiModel(description = "The configuration strings for the pipeline.")

public class PipelineConfig {
  public static final String JSON_PROPERTY_SOURCE = "source";
  @JsonProperty(JSON_PROPERTY_SOURCE)
  private String source;

  public static final String JSON_PROPERTY_COMPILED = "compiled";
  @JsonProperty(JSON_PROPERTY_COMPILED)
  private String compiled;

  public PipelineConfig source(String source) {
    this.source = source;
    return this;
  }

   /**
   * The source configuration for the pipeline, before any config compilation has been performed. If there is no config, then this field will be empty.
   * @return source
  **/
  @ApiModelProperty(required = true, value = "The source configuration for the pipeline, before any config compilation has been performed. If there is no config, then this field will be empty.")
  public String getSource() {
    return source;
  }

  public void setSource(String source) {
    this.source = source;
  }

  public PipelineConfig compiled(String compiled) {
    this.compiled = compiled;
    return this;
  }

   /**
   * The compiled configuration for the pipeline, after all orb expansion has been performed. If there were errors processing the pipeline&#39;s configuration, then this field may be empty.
   * @return compiled
  **/
  @ApiModelProperty(required = true, value = "The compiled configuration for the pipeline, after all orb expansion has been performed. If there were errors processing the pipeline's configuration, then this field may be empty.")
  public String getCompiled() {
    return compiled;
  }

  public void setCompiled(String compiled) {
    this.compiled = compiled;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PipelineConfig pipelineConfig = (PipelineConfig) o;
    return Objects.equals(this.source, pipelineConfig.source) &&
        Objects.equals(this.compiled, pipelineConfig.compiled);
  }

  @Override
  public int hashCode() {
    return Objects.hash(source, compiled);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PipelineConfig {\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    compiled: ").append(toIndentedString(compiled)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

