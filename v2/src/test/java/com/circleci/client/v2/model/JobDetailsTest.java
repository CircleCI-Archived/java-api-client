/*
 * CircleCI API
 * This describes the resources that make up the CircleCI API v2. API v2 is currently in Preview. Additional documentation for this API can be found in the [API Preview Docs](https://github.com/CircleCI-Public/api-preview-docs/tree/master/docs). Breaking changes to the API will be announced in the [Breaking Changes log](https://github.com/CircleCI-Public/api-preview-docs/blob/master/docs/breaking.md). API V1 [remains accessible here](https://circleci.com/docs/api/v1/)
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.circleci.client.v2.model;

import com.circleci.client.v2.model.JobDetailsContexts;
import com.circleci.client.v2.model.JobDetailsExecutor;
import com.circleci.client.v2.model.JobDetailsLatestWorkflow;
import com.circleci.client.v2.model.JobDetailsMessages;
import com.circleci.client.v2.model.JobDetailsOrganization;
import com.circleci.client.v2.model.JobDetailsParallelRuns;
import com.circleci.client.v2.model.JobDetailsPipeline;
import com.circleci.client.v2.model.JobDetailsProject;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for JobDetails
 */
public class JobDetailsTest {
    private final JobDetails model = new JobDetails();

    /**
     * Model tests for JobDetails
     */
    @Test
    public void testJobDetails() {
        // TODO: test JobDetails
    }

    /**
     * Test the property 'webUrl'
     */
    @Test
    public void webUrlTest() {
        // TODO: test webUrl
    }

    /**
     * Test the property 'project'
     */
    @Test
    public void projectTest() {
        // TODO: test project
    }

    /**
     * Test the property 'parallelRuns'
     */
    @Test
    public void parallelRunsTest() {
        // TODO: test parallelRuns
    }

    /**
     * Test the property 'startedAt'
     */
    @Test
    public void startedAtTest() {
        // TODO: test startedAt
    }

    /**
     * Test the property 'latestWorkflow'
     */
    @Test
    public void latestWorkflowTest() {
        // TODO: test latestWorkflow
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'executor'
     */
    @Test
    public void executorTest() {
        // TODO: test executor
    }

    /**
     * Test the property 'parallelism'
     */
    @Test
    public void parallelismTest() {
        // TODO: test parallelism
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'number'
     */
    @Test
    public void numberTest() {
        // TODO: test number
    }

    /**
     * Test the property 'pipeline'
     */
    @Test
    public void pipelineTest() {
        // TODO: test pipeline
    }

    /**
     * Test the property 'duration'
     */
    @Test
    public void durationTest() {
        // TODO: test duration
    }

    /**
     * Test the property 'createdAt'
     */
    @Test
    public void createdAtTest() {
        // TODO: test createdAt
    }

    /**
     * Test the property 'messages'
     */
    @Test
    public void messagesTest() {
        // TODO: test messages
    }

    /**
     * Test the property 'contexts'
     */
    @Test
    public void contextsTest() {
        // TODO: test contexts
    }

    /**
     * Test the property 'organization'
     */
    @Test
    public void organizationTest() {
        // TODO: test organization
    }

    /**
     * Test the property 'queuedAt'
     */
    @Test
    public void queuedAtTest() {
        // TODO: test queuedAt
    }

    /**
     * Test the property 'stoppedAt'
     */
    @Test
    public void stoppedAtTest() {
        // TODO: test stoppedAt
    }

}
